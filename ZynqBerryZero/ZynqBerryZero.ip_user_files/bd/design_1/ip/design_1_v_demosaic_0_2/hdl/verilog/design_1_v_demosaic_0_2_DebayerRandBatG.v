// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_demosaic_0_2_DebayerRandBatG (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        srcImg_dout,
        srcImg_empty_n,
        srcImg_read,
        outImg_din,
        outImg_full_n,
        outImg_write,
        height,
        width,
        bayerPhase_dout,
        bayerPhase_empty_n,
        bayerPhase_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] srcImg_dout;
input   srcImg_empty_n;
output   srcImg_read;
output  [23:0] outImg_din;
input   outImg_full_n;
output   outImg_write;
input  [15:0] height;
input  [15:0] width;
input  [15:0] bayerPhase_dout;
input   bayerPhase_empty_n;
output   bayerPhase_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg srcImg_read;
reg outImg_write;
reg bayerPhase_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    srcImg_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln833_reg_1950;
reg   [0:0] icmp_ln843_reg_1959;
reg   [0:0] cmp37_i_i_reg_1934;
reg    outImg_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_23_reg_1996;
reg   [0:0] tmp_23_reg_1996_pp0_iter3_reg;
reg    bayerPhase_blk_n;
reg   [11:0] z_2_reg_280;
reg   [7:0] pix_val_V_6_reg_318;
reg   [7:0] pix_val_V_6_reg_318_pp0_iter3_reg;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op109_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] pix_val_V_7_reg_328;
reg   [7:0] pix_val_V_7_reg_328_pp0_iter3_reg;
reg   [7:0] pix_val_V_reg_338;
reg   [7:0] pix_val_V_reg_338_pp0_iter3_reg;
wire   [10:0] trunc_ln1017_fu_402_p1;
wire   [11:0] trunc_ln1017_2_fu_406_p1;
wire   [10:0] loopHeight_fu_410_p2;
wire   [0:0] x_phase_fu_416_p1;
reg   [0:0] x_phase_reg_1900;
reg   [14:0] trunc_ln822_1_i_reg_1905;
wire   [11:0] add_ln830_fu_430_p2;
wire   [10:0] y_3_fu_436_p2;
reg   [10:0] y_3_reg_1915;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln830_fu_442_p2;
wire  signed [11:0] out_y_cast559_i_i_fu_457_p1;
reg  signed [11:0] out_y_cast559_i_i_reg_1924;
wire   [14:0] xor_i_i_fu_471_p2;
reg   [14:0] xor_i_i_reg_1929;
wire   [0:0] cmp37_i_i_fu_476_p2;
wire   [0:0] cmp140_i_i_fu_481_p2;
reg   [0:0] cmp140_i_i_reg_1938;
wire   [11:0] z_fu_487_p2;
reg   [11:0] z_reg_1945;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln833_fu_493_p2;
reg   [0:0] icmp_ln833_reg_1950_pp0_iter1_reg;
wire   [63:0] zext_ln833_fu_498_p1;
reg   [63:0] zext_ln833_reg_1954;
reg   [63:0] zext_ln833_reg_1954_pp0_iter1_reg;
wire   [0:0] icmp_ln843_fu_514_p2;
reg   [0:0] icmp_ln843_reg_1959_pp0_iter1_reg;
reg   [11:0] lineBuffer_val_V_0_addr_reg_1963;
wire   [0:0] cmp110_i_i_fu_519_p2;
reg   [0:0] cmp110_i_i_reg_1974;
reg   [0:0] cmp110_i_i_reg_1974_pp0_iter1_reg;
wire   [0:0] icmp_ln966_fu_540_p2;
reg   [0:0] icmp_ln966_reg_1990;
reg   [0:0] icmp_ln966_reg_1990_pp0_iter1_reg;
reg   [0:0] icmp_ln966_reg_1990_pp0_iter2_reg;
reg   [0:0] icmp_ln966_reg_1990_pp0_iter3_reg;
reg   [0:0] tmp_23_reg_1996_pp0_iter1_reg;
reg   [0:0] tmp_23_reg_1996_pp0_iter2_reg;
wire   [8:0] ret_fu_901_p2;
reg   [8:0] ret_reg_2000;
wire   [7:0] trunc_ln180_fu_907_p1;
reg   [7:0] trunc_ln180_reg_2005;
wire   [7:0] sub_ln180_fu_911_p2;
reg   [7:0] sub_ln180_reg_2010;
wire   [8:0] ret_27_fu_925_p2;
reg   [8:0] ret_27_reg_2015;
wire   [7:0] trunc_ln180_4_fu_931_p1;
reg   [7:0] trunc_ln180_4_reg_2020;
wire   [7:0] sub_ln180_4_fu_935_p2;
reg   [7:0] sub_ln180_4_reg_2025;
wire   [8:0] ret_28_fu_949_p2;
reg   [8:0] ret_28_reg_2030;
wire   [7:0] trunc_ln180_5_fu_955_p1;
reg   [7:0] trunc_ln180_5_reg_2035;
wire   [7:0] sub_ln180_5_fu_959_p2;
reg   [7:0] sub_ln180_5_reg_2040;
wire   [8:0] ret_29_fu_973_p2;
reg   [8:0] ret_29_reg_2045;
wire   [7:0] trunc_ln180_6_fu_979_p1;
reg   [7:0] trunc_ln180_6_reg_2050;
wire   [7:0] sub_ln180_6_fu_983_p2;
reg   [7:0] sub_ln180_6_reg_2055;
wire   [8:0] ret_30_fu_997_p2;
reg   [8:0] ret_30_reg_2060;
wire   [7:0] trunc_ln180_7_fu_1003_p1;
reg   [7:0] trunc_ln180_7_reg_2065;
wire   [8:0] ret_31_fu_1015_p2;
reg   [8:0] ret_31_reg_2071;
wire   [7:0] trunc_ln180_8_fu_1021_p1;
reg   [7:0] trunc_ln180_8_reg_2076;
wire   [8:0] ret_56_fu_1025_p2;
reg   [8:0] ret_56_reg_2082;
wire   [8:0] ret_57_fu_1031_p2;
reg   [8:0] ret_57_reg_2087;
wire   [8:0] ret_58_fu_1037_p2;
reg   [8:0] ret_58_reg_2092;
wire   [8:0] ret_59_fu_1043_p2;
reg   [8:0] ret_59_reg_2097;
wire   [9:0] ret_46_fu_1069_p2;
reg   [9:0] ret_46_reg_2102;
wire   [9:0] ret_50_fu_1095_p2;
reg   [9:0] ret_50_reg_2109;
wire   [11:0] ret_52_fu_1603_p2;
reg   [11:0] ret_52_reg_2116;
wire   [11:0] ret_53_fu_1621_p2;
reg   [11:0] ret_53_reg_2121;
reg   [0:0] tmp_19_reg_2126;
reg   [3:0] tmp_20_reg_2132;
reg   [0:0] tmp_21_reg_2137;
reg   [3:0] tmp_22_reg_2143;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
wire   [11:0] lineBuffer_val_V_0_address0;
reg    lineBuffer_val_V_0_ce0;
reg    lineBuffer_val_V_0_we0;
wire   [11:0] lineBuffer_val_V_0_address1;
reg    lineBuffer_val_V_0_ce1;
wire   [23:0] lineBuffer_val_V_0_q1;
wire   [11:0] lineBuffer_val_V_1_address0;
reg    lineBuffer_val_V_1_ce0;
reg    lineBuffer_val_V_1_we0;
wire   [23:0] lineBuffer_val_V_1_d0;
wire   [11:0] lineBuffer_val_V_1_address1;
reg    lineBuffer_val_V_1_ce1;
wire   [23:0] lineBuffer_val_V_1_q1;
reg   [10:0] y_reg_269;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
reg   [11:0] ap_phi_mux_z_2_phi_fu_284_p4;
reg   [7:0] ap_phi_mux_down_val_V_2_phi_fu_294_p4;
wire   [7:0] select_ln909_9_fu_837_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_down_val_V_2_reg_291;
reg   [7:0] ap_phi_mux_down_val_V_1_phi_fu_303_p4;
wire   [7:0] select_ln909_10_fu_845_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_down_val_V_1_reg_300;
reg   [7:0] ap_phi_mux_down_val_V_phi_fu_312_p4;
wire   [7:0] select_ln909_11_fu_853_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_down_val_V_reg_309;
reg   [7:0] ap_phi_mux_pix_val_V_6_phi_fu_321_p4;
wire   [7:0] select_ln909_3_fu_789_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_6_reg_318;
reg   [7:0] ap_phi_mux_pix_val_V_7_phi_fu_331_p4;
wire   [7:0] select_ln909_4_fu_797_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_7_reg_328;
reg   [7:0] ap_phi_mux_pix_val_V_phi_fu_341_p4;
wire   [7:0] select_ln909_5_fu_805_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_338;
reg   [7:0] ap_phi_mux_left_val_V_2_phi_fu_351_p4;
wire   [7:0] select_ln909_6_fu_813_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_left_val_V_2_reg_348;
reg   [7:0] ap_phi_mux_left_val_V_1_phi_fu_360_p4;
wire   [7:0] select_ln909_7_fu_821_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_left_val_V_1_reg_357;
reg   [7:0] ap_phi_mux_left_val_V_phi_fu_369_p4;
wire   [7:0] select_ln909_8_fu_829_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_left_val_V_reg_366;
reg   [7:0] ap_phi_mux_up_val_V_2_phi_fu_378_p4;
wire   [7:0] select_ln909_fu_765_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_up_val_V_2_reg_375;
reg   [7:0] ap_phi_mux_up_val_V_1_phi_fu_387_p4;
wire   [7:0] select_ln909_1_fu_773_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_up_val_V_1_reg_384;
reg   [7:0] ap_phi_mux_up_val_V_phi_fu_396_p4;
wire   [7:0] select_ln909_2_fu_781_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_up_val_V_reg_393;
reg   [7:0] pixWindow_val_val_V_0_1_0_fu_106;
reg   [7:0] pixWindow_val_val_V_0_1_1_fu_110;
reg   [7:0] pixWindow_val_val_V_0_1_2_fu_114;
reg   [7:0] pixWindow_val_val_V_1_0_0_fu_118;
reg   [7:0] pixWindow_val_val_V_1_0_1_fu_122;
reg   [7:0] pixWindow_val_val_V_1_0_2_fu_126;
reg   [7:0] pixWindow_val_val_V_1_1_0_fu_130;
reg   [7:0] pixWindow_val_val_V_1_1_1_fu_134;
reg   [7:0] pixWindow_val_val_V_1_1_2_fu_138;
reg   [7:0] pixWindow_val_val_V_2_1_0_fu_142;
reg   [7:0] pixWindow_val_val_V_2_1_1_fu_146;
reg   [7:0] pixWindow_val_val_V_2_1_2_fu_150;
reg   [7:0] pixWindow_val_val_V_2_2_0_fu_154;
wire   [7:0] pixBuf_val_V_0_0_2_fu_558_p1;
wire   [7:0] pixBuf_val_V_0_0_fu_651_p1;
reg   [7:0] pixWindow_val_val_V_2_2_1_fu_158;
reg   [7:0] pixWindow_val_val_V_2_2_2_fu_162;
reg   [7:0] pixWindow_val_val_V_1_2_0_fu_166;
reg   [7:0] pixWindow_val_val_V_1_2_1_fu_170;
reg   [7:0] pixWindow_val_val_V_1_2_2_fu_174;
reg   [7:0] pixWindow_val_val_V_0_2_0_fu_178;
wire   [7:0] pixBuf_val_V_2_0_fu_582_p1;
reg   [7:0] pixWindow_val_val_V_0_2_1_fu_182;
reg   [7:0] pixWindow_val_val_V_0_2_2_fu_186;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] out_y_fu_451_p2;
wire   [0:0] empty_126_fu_447_p1;
wire   [0:0] out_y_cast_i_i_fu_461_p2;
wire   [14:0] and215_cast_i_i_fu_467_p1;
wire   [0:0] trunc_ln841_fu_504_p1;
wire   [0:0] xor_ln966_fu_525_p2;
wire   [0:0] xor_ln966_1_fu_530_p2;
wire   [14:0] zext_ln966_fu_536_p1;
wire   [11:0] out_x_fu_508_p2;
wire   [11:0] or_ln1004_fu_545_p2;
wire   [7:0] select_ln927_2_fu_875_p3;
wire   [7:0] select_ln927_1_fu_868_p3;
wire   [7:0] select_ln927_fu_861_p3;
wire   [8:0] zext_ln1347_fu_893_p1;
wire   [8:0] zext_ln1347_10_fu_897_p1;
wire   [8:0] zext_ln1347_11_fu_917_p1;
wire   [8:0] zext_ln1347_12_fu_921_p1;
wire   [8:0] zext_ln1347_13_fu_941_p1;
wire   [8:0] zext_ln1347_14_fu_945_p1;
wire   [8:0] zext_ln1347_15_fu_965_p1;
wire   [8:0] zext_ln1347_16_fu_969_p1;
wire   [8:0] zext_ln1347_17_fu_989_p1;
wire   [8:0] zext_ln1347_18_fu_993_p1;
wire   [8:0] zext_ln1347_19_fu_1007_p1;
wire   [8:0] zext_ln1347_20_fu_1011_p1;
wire   [8:0] ret_60_fu_1049_p2;
wire   [8:0] ret_61_fu_1055_p2;
wire  signed [9:0] sext_ln215_5_fu_1065_p1;
wire  signed [9:0] sext_ln215_4_fu_1061_p1;
wire   [8:0] ret_62_fu_1075_p2;
wire   [8:0] ret_63_fu_1081_p2;
wire  signed [9:0] sext_ln215_7_fu_1091_p1;
wire  signed [9:0] sext_ln215_6_fu_1087_p1;
wire   [0:0] tmp_fu_1161_p3;
wire   [0:0] tmp_10_fu_1174_p3;
wire   [0:0] tmp_11_fu_1187_p3;
wire   [0:0] tmp_12_fu_1200_p3;
wire   [0:0] tmp_13_fu_1218_p3;
wire   [7:0] sub_ln180_7_fu_1213_p2;
wire   [0:0] tmp_14_fu_1237_p3;
wire   [7:0] sub_ln180_8_fu_1232_p2;
wire   [7:0] DRh_V_fu_1168_p3;
wire   [7:0] DGh_V_fu_1194_p3;
wire   [8:0] zext_ln215_1_fu_1255_p1;
wire   [8:0] zext_ln215_fu_1251_p1;
wire   [8:0] ret_54_fu_1259_p2;
wire   [7:0] DBh_V_fu_1225_p3;
wire   [9:0] zext_ln215_2_fu_1265_p1;
wire   [9:0] zext_ln215_3_fu_1269_p1;
wire   [7:0] DRv_V_fu_1181_p3;
wire   [7:0] DGv_V_fu_1207_p3;
wire   [8:0] zext_ln215_5_fu_1283_p1;
wire   [8:0] zext_ln215_4_fu_1279_p1;
wire   [8:0] ret_55_fu_1287_p2;
wire   [7:0] DBv_V_fu_1244_p3;
wire   [9:0] zext_ln215_6_fu_1293_p1;
wire   [9:0] zext_ln215_7_fu_1297_p1;
wire   [9:0] ret_33_fu_1273_p2;
wire   [9:0] ret_35_fu_1301_p2;
wire  signed [9:0] sext_ln215_1_fu_1316_p1;
wire  signed [9:0] sext_ln215_fu_1313_p1;
wire   [9:0] ret_38_fu_1319_p2;
wire   [9:0] sub_ln1364_fu_1333_p2;
wire   [8:0] trunc_ln1364_i_fu_1339_p4;
wire  signed [9:0] sext_ln1364_fu_1349_p1;
wire   [10:0] zext_ln1364_fu_1353_p1;
wire   [8:0] trunc_ln1364_3_i_fu_1363_p4;
wire  signed [9:0] sext_ln1364_1_fu_1373_p1;
wire   [0:0] tmp_15_fu_1325_p3;
wire   [10:0] sub_ln1364_2_fu_1357_p2;
wire   [10:0] zext_ln1364_1_fu_1377_p1;
wire  signed [9:0] sext_ln215_3_fu_1396_p1;
wire  signed [9:0] sext_ln215_2_fu_1393_p1;
wire   [9:0] ret_42_fu_1399_p2;
wire   [9:0] sub_ln1364_3_fu_1413_p2;
wire   [8:0] trunc_ln1364_1_i_fu_1419_p4;
wire  signed [9:0] sext_ln1364_2_fu_1429_p1;
wire   [10:0] zext_ln1364_2_fu_1433_p1;
wire   [8:0] trunc_ln1364_5_i_fu_1443_p4;
wire  signed [9:0] sext_ln1364_3_fu_1453_p1;
wire   [0:0] tmp_16_fu_1405_p3;
wire   [10:0] sub_ln1364_4_fu_1437_p2;
wire   [10:0] zext_ln1364_3_fu_1457_p1;
wire   [9:0] sub_ln1364_5_fu_1476_p2;
wire   [8:0] trunc_ln1364_2_i_fu_1481_p4;
wire  signed [9:0] sext_ln1364_4_fu_1491_p1;
wire   [10:0] zext_ln1364_4_fu_1495_p1;
wire   [8:0] trunc_ln1364_7_i_fu_1505_p4;
wire  signed [9:0] sext_ln1364_5_fu_1514_p1;
wire   [0:0] tmp_17_fu_1469_p3;
wire   [10:0] sub_ln1364_6_fu_1499_p2;
wire   [10:0] zext_ln1364_5_fu_1518_p1;
wire   [9:0] sub_ln1364_7_fu_1537_p2;
wire   [8:0] trunc_ln1364_10_i_fu_1542_p4;
wire  signed [9:0] sext_ln1364_6_fu_1552_p1;
wire   [10:0] zext_ln1364_6_fu_1556_p1;
wire   [8:0] trunc_ln1364_9_i_fu_1566_p4;
wire  signed [9:0] sext_ln1364_7_fu_1575_p1;
wire   [0:0] tmp_18_fu_1530_p3;
wire   [10:0] sub_ln1364_8_fu_1560_p2;
wire   [10:0] zext_ln1364_7_fu_1579_p1;
wire   [0:0] icmp_ln878_fu_1307_p2;
wire   [10:0] ret_39_fu_1381_p3;
wire   [10:0] ret_47_fu_1522_p3;
wire   [10:0] select_ln878_fu_1591_p3;
wire   [11:0] zext_ln1347_21_fu_1389_p1;
wire  signed [11:0] sext_ln878_fu_1599_p1;
wire   [10:0] ret_43_fu_1461_p3;
wire   [10:0] ret_51_fu_1583_p3;
wire   [10:0] select_ln878_1_fu_1609_p3;
wire  signed [11:0] sext_ln878_1_fu_1617_p1;
wire   [0:0] xor_ln301_fu_1674_p2;
wire   [0:0] icmp_ln994_fu_1669_p2;
wire   [0:0] or_ln994_fu_1687_p2;
wire   [7:0] select_ln994_fu_1679_p3;
wire   [7:0] trunc_ln301_2_fu_1666_p1;
wire   [0:0] xor_ln301_2_fu_1705_p2;
wire   [0:0] icmp_ln995_fu_1700_p2;
wire   [0:0] or_ln995_fu_1718_p2;
wire   [7:0] select_ln995_fu_1710_p3;
wire   [7:0] trunc_ln301_fu_1663_p1;
wire   [7:0] select_ln301_fu_1692_p3;
wire   [7:0] select_ln301_4_fu_1723_p3;
wire   [7:0] select_ln966_fu_1731_p3;
wire   [7:0] select_ln966_1_fu_1738_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op79_load_state3;
reg    ap_enable_operation_79;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_predicate_op91_load_state4;
reg    ap_enable_operation_91;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op113_store_state4;
reg    ap_enable_operation_113;
reg    ap_predicate_op81_load_state3;
reg    ap_enable_operation_81;
reg    ap_predicate_op95_load_state4;
reg    ap_enable_operation_95;
reg    ap_predicate_op158_store_state5;
reg    ap_enable_operation_158;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_437;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

design_1_v_demosaic_0_2_DebayerRatBorBatR_lineBuffer_val_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 2049 ),
    .AddressWidth( 12 ))
lineBuffer_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lineBuffer_val_V_0_address0),
    .ce0(lineBuffer_val_V_0_ce0),
    .we0(lineBuffer_val_V_0_we0),
    .d0(srcImg_dout),
    .address1(lineBuffer_val_V_0_address1),
    .ce1(lineBuffer_val_V_0_ce1),
    .q1(lineBuffer_val_V_0_q1)
);

design_1_v_demosaic_0_2_DebayerRatBorBatR_lineBuffer_val_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 2049 ),
    .AddressWidth( 12 ))
lineBuffer_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lineBuffer_val_V_1_address0),
    .ce0(lineBuffer_val_V_1_ce0),
    .we0(lineBuffer_val_V_1_we0),
    .d0(lineBuffer_val_V_1_d0),
    .address1(lineBuffer_val_V_1_address1),
    .ce1(lineBuffer_val_V_1_ce1),
    .q1(lineBuffer_val_V_1_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_437)) begin
        if ((cmp37_i_i_reg_1934 == 1'd1)) begin
            pixWindow_val_val_V_2_2_0_fu_154 <= pixBuf_val_V_0_0_fu_651_p1;
        end else if ((cmp37_i_i_reg_1934 == 1'd0)) begin
            pixWindow_val_val_V_2_2_0_fu_154 <= pixBuf_val_V_0_0_2_fu_558_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_437)) begin
        if ((cmp37_i_i_reg_1934 == 1'd1)) begin
            pixWindow_val_val_V_2_2_1_fu_158 <= {{srcImg_dout[15:8]}};
        end else if ((cmp37_i_i_reg_1934 == 1'd0)) begin
            pixWindow_val_val_V_2_2_1_fu_158 <= {{lineBuffer_val_V_0_q1[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_437)) begin
        if ((cmp37_i_i_reg_1934 == 1'd1)) begin
            pixWindow_val_val_V_2_2_2_fu_162 <= {{srcImg_dout[23:16]}};
        end else if ((cmp37_i_i_reg_1934 == 1'd0)) begin
            pixWindow_val_val_V_2_2_2_fu_162 <= {{lineBuffer_val_V_0_q1[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_6_reg_318 <= pixWindow_val_val_V_1_1_2_fu_138;
        end else if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_6_reg_318 <= select_ln909_3_fu_789_p3;
        end else if ((1'b1 == 1'b1)) begin
            pix_val_V_6_reg_318 <= ap_phi_reg_pp0_iter2_pix_val_V_6_reg_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_7_reg_328 <= pixWindow_val_val_V_1_1_1_fu_134;
        end else if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_7_reg_328 <= select_ln909_4_fu_797_p3;
        end else if ((1'b1 == 1'b1)) begin
            pix_val_V_7_reg_328 <= ap_phi_reg_pp0_iter2_pix_val_V_7_reg_328;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_reg_338 <= pixWindow_val_val_V_1_1_0_fu_130;
        end else if (((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_reg_338 <= select_ln909_5_fu_805_p3;
        end else if ((1'b1 == 1'b1)) begin
            pix_val_V_reg_338 <= ap_phi_reg_pp0_iter2_pix_val_V_reg_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_reg_269 <= y_3_reg_1915;
    end else if ((~((ap_start == 1'b0) | (bayerPhase_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_reg_269 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z_2_reg_280 <= z_reg_1945;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd0))) begin
        z_2_reg_280 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln843_fu_514_p2 == 1'd1) & (icmp_ln833_fu_493_p2 == 1'd0))) begin
        cmp110_i_i_reg_1974 <= cmp110_i_i_fu_519_p2;
        lineBuffer_val_V_0_addr_reg_1963 <= zext_ln833_fu_498_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp110_i_i_reg_1974_pp0_iter1_reg <= cmp110_i_i_reg_1974;
        icmp_ln833_reg_1950 <= icmp_ln833_fu_493_p2;
        icmp_ln833_reg_1950_pp0_iter1_reg <= icmp_ln833_reg_1950;
        icmp_ln843_reg_1959_pp0_iter1_reg <= icmp_ln843_reg_1959;
        icmp_ln966_reg_1990_pp0_iter1_reg <= icmp_ln966_reg_1990;
        tmp_23_reg_1996_pp0_iter1_reg <= tmp_23_reg_1996;
        zext_ln833_reg_1954_pp0_iter1_reg[11 : 0] <= zext_ln833_reg_1954[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd0))) begin
        cmp140_i_i_reg_1938 <= cmp140_i_i_fu_481_p2;
        cmp37_i_i_reg_1934 <= cmp37_i_i_fu_476_p2;
        out_y_cast559_i_i_reg_1924 <= out_y_cast559_i_i_fu_457_p1;
        xor_i_i_reg_1929 <= xor_i_i_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln833_fu_493_p2 == 1'd0))) begin
        icmp_ln843_reg_1959 <= icmp_ln843_fu_514_p2;
        icmp_ln966_reg_1990 <= icmp_ln966_fu_540_p2;
        tmp_23_reg_1996 <= or_ln1004_fu_545_p2[32'd11];
        zext_ln833_reg_1954[11 : 0] <= zext_ln833_fu_498_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln966_reg_1990_pp0_iter2_reg <= icmp_ln966_reg_1990_pp0_iter1_reg;
        icmp_ln966_reg_1990_pp0_iter3_reg <= icmp_ln966_reg_1990_pp0_iter2_reg;
        pix_val_V_6_reg_318_pp0_iter3_reg <= pix_val_V_6_reg_318;
        pix_val_V_7_reg_328_pp0_iter3_reg <= pix_val_V_7_reg_328;
        pix_val_V_reg_338_pp0_iter3_reg <= pix_val_V_reg_338;
        tmp_23_reg_1996_pp0_iter2_reg <= tmp_23_reg_1996_pp0_iter1_reg;
        tmp_23_reg_1996_pp0_iter3_reg <= tmp_23_reg_1996_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
        pixWindow_val_val_V_0_1_0_fu_106 <= pixWindow_val_val_V_0_2_0_fu_178;
        pixWindow_val_val_V_0_1_1_fu_110 <= pixWindow_val_val_V_0_2_1_fu_182;
        pixWindow_val_val_V_0_1_2_fu_114 <= pixWindow_val_val_V_0_2_2_fu_186;
        pixWindow_val_val_V_1_0_0_fu_118 <= ap_phi_mux_pix_val_V_phi_fu_341_p4;
        pixWindow_val_val_V_1_0_1_fu_122 <= ap_phi_mux_pix_val_V_7_phi_fu_331_p4;
        pixWindow_val_val_V_1_0_2_fu_126 <= ap_phi_mux_pix_val_V_6_phi_fu_321_p4;
        pixWindow_val_val_V_1_1_0_fu_130 <= pixWindow_val_val_V_1_2_0_fu_166;
        pixWindow_val_val_V_1_1_1_fu_134 <= pixWindow_val_val_V_1_2_1_fu_170;
        pixWindow_val_val_V_1_1_2_fu_138 <= pixWindow_val_val_V_1_2_2_fu_174;
        pixWindow_val_val_V_2_1_0_fu_142 <= pixWindow_val_val_V_2_2_0_fu_154;
        pixWindow_val_val_V_2_1_1_fu_146 <= pixWindow_val_val_V_2_2_1_fu_158;
        pixWindow_val_val_V_2_1_2_fu_150 <= pixWindow_val_val_V_2_2_2_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixWindow_val_val_V_0_2_0_fu_178 <= pixBuf_val_V_2_0_fu_582_p1;
        pixWindow_val_val_V_0_2_1_fu_182 <= {{lineBuffer_val_V_1_q1[15:8]}};
        pixWindow_val_val_V_0_2_2_fu_186 <= {{lineBuffer_val_V_1_q1[23:16]}};
        pixWindow_val_val_V_1_2_0_fu_166 <= pixBuf_val_V_0_0_2_fu_558_p1;
        pixWindow_val_val_V_1_2_1_fu_170 <= {{lineBuffer_val_V_0_q1[15:8]}};
        pixWindow_val_val_V_1_2_2_fu_174 <= {{lineBuffer_val_V_0_q1[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
        ret_27_reg_2015 <= ret_27_fu_925_p2;
        ret_28_reg_2030 <= ret_28_fu_949_p2;
        ret_29_reg_2045 <= ret_29_fu_973_p2;
        ret_30_reg_2060 <= ret_30_fu_997_p2;
        ret_31_reg_2071 <= ret_31_fu_1015_p2;
        ret_reg_2000 <= ret_fu_901_p2;
        sub_ln180_4_reg_2025 <= sub_ln180_4_fu_935_p2;
        sub_ln180_5_reg_2040 <= sub_ln180_5_fu_959_p2;
        sub_ln180_6_reg_2055 <= sub_ln180_6_fu_983_p2;
        sub_ln180_reg_2010 <= sub_ln180_fu_911_p2;
        trunc_ln180_4_reg_2020 <= trunc_ln180_4_fu_931_p1;
        trunc_ln180_5_reg_2035 <= trunc_ln180_5_fu_955_p1;
        trunc_ln180_6_reg_2050 <= trunc_ln180_6_fu_979_p1;
        trunc_ln180_7_reg_2065 <= trunc_ln180_7_fu_1003_p1;
        trunc_ln180_8_reg_2076 <= trunc_ln180_8_fu_1021_p1;
        trunc_ln180_reg_2005 <= trunc_ln180_fu_907_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln966_reg_1990_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
        ret_46_reg_2102 <= ret_46_fu_1069_p2;
        ret_50_reg_2109 <= ret_50_fu_1095_p2;
        ret_56_reg_2082 <= ret_56_fu_1025_p2;
        ret_57_reg_2087 <= ret_57_fu_1031_p2;
        ret_58_reg_2092 <= ret_58_fu_1037_p2;
        ret_59_reg_2097 <= ret_59_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln966_reg_1990_pp0_iter2_reg == 1'd0))) begin
        ret_52_reg_2116 <= ret_52_fu_1603_p2;
        ret_53_reg_2121 <= ret_53_fu_1621_p2;
        tmp_19_reg_2126 <= ret_52_fu_1603_p2[32'd11];
        tmp_20_reg_2132 <= {{ret_52_fu_1603_p2[11:8]}};
        tmp_21_reg_2137 <= ret_53_fu_1621_p2[32'd11];
        tmp_22_reg_2143 <= {{ret_53_fu_1621_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln822_1_i_reg_1905 <= {{bayerPhase_dout[15:1]}};
        x_phase_reg_1900 <= x_phase_fu_416_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_3_reg_1915 <= y_3_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        z_reg_1945 <= z_fu_487_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln833_fu_493_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_1_phi_fu_303_p4 = pixWindow_val_val_V_2_1_1_fu_146;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_1_phi_fu_303_p4 = select_ln909_10_fu_845_p3;
        end else begin
            ap_phi_mux_down_val_V_1_phi_fu_303_p4 = ap_phi_reg_pp0_iter2_down_val_V_1_reg_300;
        end
    end else begin
        ap_phi_mux_down_val_V_1_phi_fu_303_p4 = ap_phi_reg_pp0_iter2_down_val_V_1_reg_300;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_2_phi_fu_294_p4 = pixWindow_val_val_V_2_1_2_fu_150;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_2_phi_fu_294_p4 = select_ln909_9_fu_837_p3;
        end else begin
            ap_phi_mux_down_val_V_2_phi_fu_294_p4 = ap_phi_reg_pp0_iter2_down_val_V_2_reg_291;
        end
    end else begin
        ap_phi_mux_down_val_V_2_phi_fu_294_p4 = ap_phi_reg_pp0_iter2_down_val_V_2_reg_291;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_phi_fu_312_p4 = pixWindow_val_val_V_2_1_0_fu_142;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_phi_fu_312_p4 = select_ln909_11_fu_853_p3;
        end else begin
            ap_phi_mux_down_val_V_phi_fu_312_p4 = ap_phi_reg_pp0_iter2_down_val_V_reg_309;
        end
    end else begin
        ap_phi_mux_down_val_V_phi_fu_312_p4 = ap_phi_reg_pp0_iter2_down_val_V_reg_309;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_1_phi_fu_360_p4 = pixWindow_val_val_V_1_0_1_fu_122;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_1_phi_fu_360_p4 = select_ln909_7_fu_821_p3;
        end else begin
            ap_phi_mux_left_val_V_1_phi_fu_360_p4 = ap_phi_reg_pp0_iter2_left_val_V_1_reg_357;
        end
    end else begin
        ap_phi_mux_left_val_V_1_phi_fu_360_p4 = ap_phi_reg_pp0_iter2_left_val_V_1_reg_357;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_2_phi_fu_351_p4 = pixWindow_val_val_V_1_0_2_fu_126;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_2_phi_fu_351_p4 = select_ln909_6_fu_813_p3;
        end else begin
            ap_phi_mux_left_val_V_2_phi_fu_351_p4 = ap_phi_reg_pp0_iter2_left_val_V_2_reg_348;
        end
    end else begin
        ap_phi_mux_left_val_V_2_phi_fu_351_p4 = ap_phi_reg_pp0_iter2_left_val_V_2_reg_348;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_phi_fu_369_p4 = pixWindow_val_val_V_1_0_0_fu_118;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_phi_fu_369_p4 = select_ln909_8_fu_829_p3;
        end else begin
            ap_phi_mux_left_val_V_phi_fu_369_p4 = ap_phi_reg_pp0_iter2_left_val_V_reg_366;
        end
    end else begin
        ap_phi_mux_left_val_V_phi_fu_369_p4 = ap_phi_reg_pp0_iter2_left_val_V_reg_366;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_6_phi_fu_321_p4 = pixWindow_val_val_V_1_1_2_fu_138;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_6_phi_fu_321_p4 = select_ln909_3_fu_789_p3;
        end else begin
            ap_phi_mux_pix_val_V_6_phi_fu_321_p4 = ap_phi_reg_pp0_iter2_pix_val_V_6_reg_318;
        end
    end else begin
        ap_phi_mux_pix_val_V_6_phi_fu_321_p4 = ap_phi_reg_pp0_iter2_pix_val_V_6_reg_318;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_7_phi_fu_331_p4 = pixWindow_val_val_V_1_1_1_fu_134;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_7_phi_fu_331_p4 = select_ln909_4_fu_797_p3;
        end else begin
            ap_phi_mux_pix_val_V_7_phi_fu_331_p4 = ap_phi_reg_pp0_iter2_pix_val_V_7_reg_328;
        end
    end else begin
        ap_phi_mux_pix_val_V_7_phi_fu_331_p4 = ap_phi_reg_pp0_iter2_pix_val_V_7_reg_328;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_phi_fu_341_p4 = pixWindow_val_val_V_1_1_0_fu_130;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_phi_fu_341_p4 = select_ln909_5_fu_805_p3;
        end else begin
            ap_phi_mux_pix_val_V_phi_fu_341_p4 = ap_phi_reg_pp0_iter2_pix_val_V_reg_338;
        end
    end else begin
        ap_phi_mux_pix_val_V_phi_fu_341_p4 = ap_phi_reg_pp0_iter2_pix_val_V_reg_338;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_1_phi_fu_387_p4 = pixWindow_val_val_V_0_1_1_fu_110;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_1_phi_fu_387_p4 = select_ln909_1_fu_773_p3;
        end else begin
            ap_phi_mux_up_val_V_1_phi_fu_387_p4 = ap_phi_reg_pp0_iter2_up_val_V_1_reg_384;
        end
    end else begin
        ap_phi_mux_up_val_V_1_phi_fu_387_p4 = ap_phi_reg_pp0_iter2_up_val_V_1_reg_384;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_2_phi_fu_378_p4 = pixWindow_val_val_V_0_1_2_fu_114;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_2_phi_fu_378_p4 = select_ln909_fu_765_p3;
        end else begin
            ap_phi_mux_up_val_V_2_phi_fu_378_p4 = ap_phi_reg_pp0_iter2_up_val_V_2_reg_375;
        end
    end else begin
        ap_phi_mux_up_val_V_2_phi_fu_378_p4 = ap_phi_reg_pp0_iter2_up_val_V_2_reg_375;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_phi_fu_396_p4 = pixWindow_val_val_V_0_1_0_fu_106;
        end else if ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_phi_fu_396_p4 = select_ln909_2_fu_781_p3;
        end else begin
            ap_phi_mux_up_val_V_phi_fu_396_p4 = ap_phi_reg_pp0_iter2_up_val_V_reg_393;
        end
    end else begin
        ap_phi_mux_up_val_V_phi_fu_396_p4 = ap_phi_reg_pp0_iter2_up_val_V_reg_393;
    end
end

always @ (*) begin
    if (((icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_z_2_phi_fu_284_p4 = z_reg_1945;
    end else begin
        ap_phi_mux_z_2_phi_fu_284_p4 = z_2_reg_280;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bayerPhase_blk_n = bayerPhase_empty_n;
    end else begin
        bayerPhase_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bayerPhase_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bayerPhase_read = 1'b1;
    end else begin
        bayerPhase_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_0_ce0 = 1'b1;
    end else begin
        lineBuffer_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        lineBuffer_val_V_0_ce1 = 1'b1;
    end else begin
        lineBuffer_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp37_i_i_reg_1934 == 1'd1) & (icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_0_we0 = 1'b1;
    end else begin
        lineBuffer_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        lineBuffer_val_V_1_ce0 = 1'b1;
    end else begin
        lineBuffer_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        lineBuffer_val_V_1_ce1 = 1'b1;
    end else begin
        lineBuffer_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0))) begin
        lineBuffer_val_V_1_we0 = 1'b1;
    end else begin
        lineBuffer_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outImg_blk_n = outImg_full_n;
    end else begin
        outImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outImg_write = 1'b1;
    end else begin
        outImg_write = 1'b0;
    end
end

always @ (*) begin
    if (((cmp37_i_i_reg_1934 == 1'd1) & (icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_blk_n = srcImg_empty_n;
    end else begin
        srcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op109_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_read = 1'b1;
    end else begin
        srcImg_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (bayerPhase_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln830_fu_442_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DBh_V_fu_1225_p3 = ((tmp_13_fu_1218_p3[0:0] == 1'b1) ? sub_ln180_7_fu_1213_p2 : trunc_ln180_7_reg_2065);

assign DBv_V_fu_1244_p3 = ((tmp_14_fu_1237_p3[0:0] == 1'b1) ? sub_ln180_8_fu_1232_p2 : trunc_ln180_8_reg_2076);

assign DGh_V_fu_1194_p3 = ((tmp_11_fu_1187_p3[0:0] == 1'b1) ? sub_ln180_5_reg_2040 : trunc_ln180_5_reg_2035);

assign DGv_V_fu_1207_p3 = ((tmp_12_fu_1200_p3[0:0] == 1'b1) ? sub_ln180_6_reg_2055 : trunc_ln180_6_reg_2050);

assign DRh_V_fu_1168_p3 = ((tmp_fu_1161_p3[0:0] == 1'b1) ? sub_ln180_reg_2010 : trunc_ln180_reg_2005);

assign DRv_V_fu_1181_p3 = ((tmp_10_fu_1174_p3[0:0] == 1'b1) ? sub_ln180_4_reg_2025 : trunc_ln180_4_reg_2020);

assign add_ln830_fu_430_p2 = (trunc_ln1017_2_fu_406_p1 + 12'd1);

assign and215_cast_i_i_fu_467_p1 = out_y_cast_i_i_fu_461_p2;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op109_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)) | ((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op109_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)) | ((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op109_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)) | ((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (bayerPhase_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((ap_predicate_op109_read_state4 == 1'b1) & (srcImg_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((tmp_23_reg_1996_pp0_iter3_reg == 1'd0) & (outImg_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_437 = ((icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_113 = (ap_predicate_op113_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_158 = (ap_predicate_op158_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_79 = (ap_predicate_op79_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_81 = (ap_predicate_op81_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_91 = (ap_predicate_op91_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_95 = (ap_predicate_op95_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter2_down_val_V_1_reg_300 = 'bx;

assign ap_phi_reg_pp0_iter2_down_val_V_2_reg_291 = 'bx;

assign ap_phi_reg_pp0_iter2_down_val_V_reg_309 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_1_reg_357 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_2_reg_348 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_6_reg_318 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_7_reg_328 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_reg_338 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_1_reg_384 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_2_reg_375 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_reg_393 = 'bx;

always @ (*) begin
    ap_predicate_op109_read_state4 = ((cmp37_i_i_reg_1934 == 1'd1) & (icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_store_state4 = ((cmp37_i_i_reg_1934 == 1'd1) & (icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_store_state5 = ((icmp_ln843_reg_1959_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_1950_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_load_state3 = ((icmp_ln843_fu_514_p2 == 1'd1) & (icmp_ln833_fu_493_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_load_state3 = ((icmp_ln843_fu_514_p2 == 1'd1) & (icmp_ln833_fu_493_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_load_state4 = ((icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_load_state4 = ((icmp_ln843_reg_1959 == 1'd1) & (icmp_ln833_reg_1950 == 1'd0));
end

assign cmp110_i_i_fu_519_p2 = ((ap_phi_mux_z_2_phi_fu_284_p4 == 12'd0) ? 1'b1 : 1'b0);

assign cmp140_i_i_fu_481_p2 = ((y_reg_269 != 11'd0) ? 1'b1 : 1'b0);

assign cmp37_i_i_fu_476_p2 = ((y_reg_269 < trunc_ln1017_fu_402_p1) ? 1'b1 : 1'b0);

assign empty_126_fu_447_p1 = y_reg_269[0:0];

assign icmp_ln830_fu_442_p2 = ((y_reg_269 == loopHeight_fu_410_p2) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_493_p2 = ((ap_phi_mux_z_2_phi_fu_284_p4 == add_ln830_fu_430_p2) ? 1'b1 : 1'b0);

assign icmp_ln843_fu_514_p2 = ((ap_phi_mux_z_2_phi_fu_284_p4 < trunc_ln1017_2_fu_406_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1307_p2 = ((ret_33_fu_1273_p2 < ret_35_fu_1301_p2) ? 1'b1 : 1'b0);

assign icmp_ln966_fu_540_p2 = ((xor_i_i_reg_1929 == zext_ln966_fu_536_p1) ? 1'b1 : 1'b0);

assign icmp_ln994_fu_1669_p2 = (($signed(tmp_20_reg_2132) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln995_fu_1700_p2 = (($signed(tmp_22_reg_2143) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign lineBuffer_val_V_0_address0 = lineBuffer_val_V_0_addr_reg_1963;

assign lineBuffer_val_V_0_address1 = zext_ln833_fu_498_p1;

assign lineBuffer_val_V_1_address0 = zext_ln833_reg_1954_pp0_iter1_reg;

assign lineBuffer_val_V_1_address1 = zext_ln833_fu_498_p1;

assign lineBuffer_val_V_1_d0 = {{{select_ln927_2_fu_875_p3}, {select_ln927_1_fu_868_p3}}, {select_ln927_fu_861_p3}};

assign loopHeight_fu_410_p2 = (trunc_ln1017_fu_402_p1 + 11'd1);

assign or_ln1004_fu_545_p2 = (out_y_cast559_i_i_reg_1924 | out_x_fu_508_p2);

assign or_ln994_fu_1687_p2 = (tmp_19_reg_2126 | icmp_ln994_fu_1669_p2);

assign or_ln995_fu_1718_p2 = (tmp_21_reg_2137 | icmp_ln995_fu_1700_p2);

assign outImg_din = {{{select_ln966_fu_1731_p3}, {select_ln966_1_fu_1738_p3}}, {pix_val_V_7_reg_328_pp0_iter3_reg}};

assign out_x_fu_508_p2 = ($signed(ap_phi_mux_z_2_phi_fu_284_p4) + $signed(12'd4095));

assign out_y_cast559_i_i_fu_457_p1 = $signed(out_y_fu_451_p2);

assign out_y_cast_i_i_fu_461_p2 = (empty_126_fu_447_p1 ^ 1'd1);

assign out_y_fu_451_p2 = ($signed(y_reg_269) + $signed(11'd2047));

assign pixBuf_val_V_0_0_2_fu_558_p1 = lineBuffer_val_V_0_q1[7:0];

assign pixBuf_val_V_0_0_fu_651_p1 = srcImg_dout[7:0];

assign pixBuf_val_V_2_0_fu_582_p1 = lineBuffer_val_V_1_q1[7:0];

assign ret_27_fu_925_p2 = (zext_ln1347_11_fu_917_p1 - zext_ln1347_12_fu_921_p1);

assign ret_28_fu_949_p2 = (zext_ln1347_13_fu_941_p1 - zext_ln1347_14_fu_945_p1);

assign ret_29_fu_973_p2 = (zext_ln1347_15_fu_965_p1 - zext_ln1347_16_fu_969_p1);

assign ret_30_fu_997_p2 = (zext_ln1347_17_fu_989_p1 - zext_ln1347_18_fu_993_p1);

assign ret_31_fu_1015_p2 = (zext_ln1347_19_fu_1007_p1 - zext_ln1347_20_fu_1011_p1);

assign ret_33_fu_1273_p2 = (zext_ln215_2_fu_1265_p1 + zext_ln215_3_fu_1269_p1);

assign ret_35_fu_1301_p2 = (zext_ln215_6_fu_1293_p1 + zext_ln215_7_fu_1297_p1);

assign ret_38_fu_1319_p2 = ($signed(sext_ln215_1_fu_1316_p1) + $signed(sext_ln215_fu_1313_p1));

assign ret_39_fu_1381_p3 = ((tmp_15_fu_1325_p3[0:0] == 1'b1) ? sub_ln1364_2_fu_1357_p2 : zext_ln1364_1_fu_1377_p1);

assign ret_42_fu_1399_p2 = ($signed(sext_ln215_3_fu_1396_p1) + $signed(sext_ln215_2_fu_1393_p1));

assign ret_43_fu_1461_p3 = ((tmp_16_fu_1405_p3[0:0] == 1'b1) ? sub_ln1364_4_fu_1437_p2 : zext_ln1364_3_fu_1457_p1);

assign ret_46_fu_1069_p2 = ($signed(sext_ln215_5_fu_1065_p1) + $signed(sext_ln215_4_fu_1061_p1));

assign ret_47_fu_1522_p3 = ((tmp_17_fu_1469_p3[0:0] == 1'b1) ? sub_ln1364_6_fu_1499_p2 : zext_ln1364_5_fu_1518_p1);

assign ret_50_fu_1095_p2 = ($signed(sext_ln215_7_fu_1091_p1) + $signed(sext_ln215_6_fu_1087_p1));

assign ret_51_fu_1583_p3 = ((tmp_18_fu_1530_p3[0:0] == 1'b1) ? sub_ln1364_8_fu_1560_p2 : zext_ln1364_7_fu_1579_p1);

assign ret_52_fu_1603_p2 = ($signed(zext_ln1347_21_fu_1389_p1) - $signed(sext_ln878_fu_1599_p1));

assign ret_53_fu_1621_p2 = ($signed(zext_ln1347_21_fu_1389_p1) - $signed(sext_ln878_1_fu_1617_p1));

assign ret_54_fu_1259_p2 = (zext_ln215_1_fu_1255_p1 + zext_ln215_fu_1251_p1);

assign ret_55_fu_1287_p2 = (zext_ln215_5_fu_1283_p1 + zext_ln215_4_fu_1279_p1);

assign ret_56_fu_1025_p2 = (zext_ln1347_13_fu_941_p1 - zext_ln1347_fu_893_p1);

assign ret_57_fu_1031_p2 = (zext_ln1347_14_fu_945_p1 - zext_ln1347_10_fu_897_p1);

assign ret_58_fu_1037_p2 = (zext_ln1347_13_fu_941_p1 - zext_ln1347_17_fu_989_p1);

assign ret_59_fu_1043_p2 = (zext_ln1347_14_fu_945_p1 - zext_ln1347_18_fu_993_p1);

assign ret_60_fu_1049_p2 = (zext_ln1347_15_fu_965_p1 - zext_ln1347_11_fu_917_p1);

assign ret_61_fu_1055_p2 = (zext_ln1347_16_fu_969_p1 - zext_ln1347_12_fu_921_p1);

assign ret_62_fu_1075_p2 = (zext_ln1347_15_fu_965_p1 - zext_ln1347_19_fu_1007_p1);

assign ret_63_fu_1081_p2 = (zext_ln1347_16_fu_969_p1 - zext_ln1347_20_fu_1011_p1);

assign ret_fu_901_p2 = (zext_ln1347_fu_893_p1 - zext_ln1347_10_fu_897_p1);

assign select_ln301_4_fu_1723_p3 = ((or_ln995_fu_1718_p2[0:0] == 1'b1) ? select_ln995_fu_1710_p3 : trunc_ln301_fu_1663_p1);

assign select_ln301_fu_1692_p3 = ((or_ln994_fu_1687_p2[0:0] == 1'b1) ? select_ln994_fu_1679_p3 : trunc_ln301_2_fu_1666_p1);

assign select_ln878_1_fu_1609_p3 = ((icmp_ln878_fu_1307_p2[0:0] == 1'b1) ? ret_43_fu_1461_p3 : ret_51_fu_1583_p3);

assign select_ln878_fu_1591_p3 = ((icmp_ln878_fu_1307_p2[0:0] == 1'b1) ? ret_39_fu_1381_p3 : ret_47_fu_1522_p3);

assign select_ln909_10_fu_845_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_1_fu_158 : pixWindow_val_val_V_2_1_1_fu_146);

assign select_ln909_11_fu_853_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_0_fu_154 : pixWindow_val_val_V_2_1_0_fu_142);

assign select_ln909_1_fu_773_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_1_fu_182 : pixWindow_val_val_V_0_1_1_fu_110);

assign select_ln909_2_fu_781_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_0_fu_178 : pixWindow_val_val_V_0_1_0_fu_106);

assign select_ln909_3_fu_789_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_174 : pixWindow_val_val_V_1_1_2_fu_138);

assign select_ln909_4_fu_797_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_170 : pixWindow_val_val_V_1_1_1_fu_134);

assign select_ln909_5_fu_805_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_166 : pixWindow_val_val_V_1_1_0_fu_130);

assign select_ln909_6_fu_813_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_174 : pixWindow_val_val_V_1_0_2_fu_126);

assign select_ln909_7_fu_821_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_170 : pixWindow_val_val_V_1_0_1_fu_122);

assign select_ln909_8_fu_829_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_166 : pixWindow_val_val_V_1_0_0_fu_118);

assign select_ln909_9_fu_837_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_2_fu_162 : pixWindow_val_val_V_2_1_2_fu_150);

assign select_ln909_fu_765_p3 = ((cmp110_i_i_reg_1974_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_2_fu_186 : pixWindow_val_val_V_0_1_2_fu_114);

assign select_ln927_1_fu_868_p3 = ((cmp140_i_i_reg_1938[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_170 : pixWindow_val_val_V_2_2_1_fu_158);

assign select_ln927_2_fu_875_p3 = ((cmp140_i_i_reg_1938[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_174 : pixWindow_val_val_V_2_2_2_fu_162);

assign select_ln927_fu_861_p3 = ((cmp140_i_i_reg_1938[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_166 : pixWindow_val_val_V_2_2_0_fu_154);

assign select_ln966_1_fu_1738_p3 = ((icmp_ln966_reg_1990_pp0_iter3_reg[0:0] == 1'b1) ? pix_val_V_6_reg_318_pp0_iter3_reg : select_ln301_4_fu_1723_p3);

assign select_ln966_fu_1731_p3 = ((icmp_ln966_reg_1990_pp0_iter3_reg[0:0] == 1'b1) ? pix_val_V_reg_338_pp0_iter3_reg : select_ln301_fu_1692_p3);

assign select_ln994_fu_1679_p3 = ((xor_ln301_fu_1674_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln995_fu_1710_p3 = ((xor_ln301_2_fu_1705_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign sext_ln1364_1_fu_1373_p1 = $signed(trunc_ln1364_3_i_fu_1363_p4);

assign sext_ln1364_2_fu_1429_p1 = $signed(trunc_ln1364_1_i_fu_1419_p4);

assign sext_ln1364_3_fu_1453_p1 = $signed(trunc_ln1364_5_i_fu_1443_p4);

assign sext_ln1364_4_fu_1491_p1 = $signed(trunc_ln1364_2_i_fu_1481_p4);

assign sext_ln1364_5_fu_1514_p1 = $signed(trunc_ln1364_7_i_fu_1505_p4);

assign sext_ln1364_6_fu_1552_p1 = $signed(trunc_ln1364_10_i_fu_1542_p4);

assign sext_ln1364_7_fu_1575_p1 = $signed(trunc_ln1364_9_i_fu_1566_p4);

assign sext_ln1364_fu_1349_p1 = $signed(trunc_ln1364_i_fu_1339_p4);

assign sext_ln215_1_fu_1316_p1 = $signed(ret_57_reg_2087);

assign sext_ln215_2_fu_1393_p1 = $signed(ret_58_reg_2092);

assign sext_ln215_3_fu_1396_p1 = $signed(ret_59_reg_2097);

assign sext_ln215_4_fu_1061_p1 = $signed(ret_60_fu_1049_p2);

assign sext_ln215_5_fu_1065_p1 = $signed(ret_61_fu_1055_p2);

assign sext_ln215_6_fu_1087_p1 = $signed(ret_62_fu_1075_p2);

assign sext_ln215_7_fu_1091_p1 = $signed(ret_63_fu_1081_p2);

assign sext_ln215_fu_1313_p1 = $signed(ret_56_reg_2082);

assign sext_ln878_1_fu_1617_p1 = $signed(select_ln878_1_fu_1609_p3);

assign sext_ln878_fu_1599_p1 = $signed(select_ln878_fu_1591_p3);

assign sub_ln1364_2_fu_1357_p2 = (11'd0 - zext_ln1364_fu_1353_p1);

assign sub_ln1364_3_fu_1413_p2 = (10'd0 - ret_42_fu_1399_p2);

assign sub_ln1364_4_fu_1437_p2 = (11'd0 - zext_ln1364_2_fu_1433_p1);

assign sub_ln1364_5_fu_1476_p2 = (10'd0 - ret_46_reg_2102);

assign sub_ln1364_6_fu_1499_p2 = (11'd0 - zext_ln1364_4_fu_1495_p1);

assign sub_ln1364_7_fu_1537_p2 = (10'd0 - ret_50_reg_2109);

assign sub_ln1364_8_fu_1560_p2 = (11'd0 - zext_ln1364_6_fu_1556_p1);

assign sub_ln1364_fu_1333_p2 = (10'd0 - ret_38_fu_1319_p2);

assign sub_ln180_4_fu_935_p2 = (8'd0 - trunc_ln180_4_fu_931_p1);

assign sub_ln180_5_fu_959_p2 = (8'd0 - trunc_ln180_5_fu_955_p1);

assign sub_ln180_6_fu_983_p2 = (8'd0 - trunc_ln180_6_fu_979_p1);

assign sub_ln180_7_fu_1213_p2 = (8'd0 - trunc_ln180_7_reg_2065);

assign sub_ln180_8_fu_1232_p2 = (8'd0 - trunc_ln180_8_reg_2076);

assign sub_ln180_fu_911_p2 = (8'd0 - trunc_ln180_fu_907_p1);

assign tmp_10_fu_1174_p3 = ret_27_reg_2015[32'd8];

assign tmp_11_fu_1187_p3 = ret_28_reg_2030[32'd8];

assign tmp_12_fu_1200_p3 = ret_29_reg_2045[32'd8];

assign tmp_13_fu_1218_p3 = ret_30_reg_2060[32'd8];

assign tmp_14_fu_1237_p3 = ret_31_reg_2071[32'd8];

assign tmp_15_fu_1325_p3 = ret_38_fu_1319_p2[32'd9];

assign tmp_16_fu_1405_p3 = ret_42_fu_1399_p2[32'd9];

assign tmp_17_fu_1469_p3 = ret_46_reg_2102[32'd9];

assign tmp_18_fu_1530_p3 = ret_50_reg_2109[32'd9];

assign tmp_fu_1161_p3 = ret_reg_2000[32'd8];

assign trunc_ln1017_2_fu_406_p1 = width[11:0];

assign trunc_ln1017_fu_402_p1 = height[10:0];

assign trunc_ln1364_10_i_fu_1542_p4 = {{sub_ln1364_7_fu_1537_p2[9:1]}};

assign trunc_ln1364_1_i_fu_1419_p4 = {{sub_ln1364_3_fu_1413_p2[9:1]}};

assign trunc_ln1364_2_i_fu_1481_p4 = {{sub_ln1364_5_fu_1476_p2[9:1]}};

assign trunc_ln1364_3_i_fu_1363_p4 = {{ret_38_fu_1319_p2[9:1]}};

assign trunc_ln1364_5_i_fu_1443_p4 = {{ret_42_fu_1399_p2[9:1]}};

assign trunc_ln1364_7_i_fu_1505_p4 = {{ret_46_reg_2102[9:1]}};

assign trunc_ln1364_9_i_fu_1566_p4 = {{ret_50_reg_2109[9:1]}};

assign trunc_ln1364_i_fu_1339_p4 = {{sub_ln1364_fu_1333_p2[9:1]}};

assign trunc_ln180_4_fu_931_p1 = ret_27_fu_925_p2[7:0];

assign trunc_ln180_5_fu_955_p1 = ret_28_fu_949_p2[7:0];

assign trunc_ln180_6_fu_979_p1 = ret_29_fu_973_p2[7:0];

assign trunc_ln180_7_fu_1003_p1 = ret_30_fu_997_p2[7:0];

assign trunc_ln180_8_fu_1021_p1 = ret_31_fu_1015_p2[7:0];

assign trunc_ln180_fu_907_p1 = ret_fu_901_p2[7:0];

assign trunc_ln301_2_fu_1666_p1 = ret_52_reg_2116[7:0];

assign trunc_ln301_fu_1663_p1 = ret_53_reg_2121[7:0];

assign trunc_ln841_fu_504_p1 = ap_phi_mux_z_2_phi_fu_284_p4[0:0];

assign x_phase_fu_416_p1 = bayerPhase_dout[0:0];

assign xor_i_i_fu_471_p2 = (trunc_ln822_1_i_reg_1905 ^ and215_cast_i_i_fu_467_p1);

assign xor_ln301_2_fu_1705_p2 = (tmp_21_reg_2137 ^ 1'd1);

assign xor_ln301_fu_1674_p2 = (tmp_19_reg_2126 ^ 1'd1);

assign xor_ln966_1_fu_530_p2 = (xor_ln966_fu_525_p2 ^ 1'd1);

assign xor_ln966_fu_525_p2 = (x_phase_reg_1900 ^ trunc_ln841_fu_504_p1);

assign y_3_fu_436_p2 = (y_reg_269 + 11'd1);

assign z_fu_487_p2 = (ap_phi_mux_z_2_phi_fu_284_p4 + 12'd1);

assign zext_ln1347_10_fu_897_p1 = pixWindow_val_val_V_1_2_0_fu_166;

assign zext_ln1347_11_fu_917_p1 = ap_phi_mux_up_val_V_phi_fu_396_p4;

assign zext_ln1347_12_fu_921_p1 = ap_phi_mux_down_val_V_phi_fu_312_p4;

assign zext_ln1347_13_fu_941_p1 = ap_phi_mux_left_val_V_1_phi_fu_360_p4;

assign zext_ln1347_14_fu_945_p1 = pixWindow_val_val_V_1_2_1_fu_170;

assign zext_ln1347_15_fu_965_p1 = ap_phi_mux_up_val_V_1_phi_fu_387_p4;

assign zext_ln1347_16_fu_969_p1 = ap_phi_mux_down_val_V_1_phi_fu_303_p4;

assign zext_ln1347_17_fu_989_p1 = ap_phi_mux_left_val_V_2_phi_fu_351_p4;

assign zext_ln1347_18_fu_993_p1 = pixWindow_val_val_V_1_2_2_fu_174;

assign zext_ln1347_19_fu_1007_p1 = ap_phi_mux_up_val_V_2_phi_fu_378_p4;

assign zext_ln1347_20_fu_1011_p1 = ap_phi_mux_down_val_V_2_phi_fu_294_p4;

assign zext_ln1347_21_fu_1389_p1 = pix_val_V_7_reg_328;

assign zext_ln1347_fu_893_p1 = ap_phi_mux_left_val_V_phi_fu_369_p4;

assign zext_ln1364_1_fu_1377_p1 = $unsigned(sext_ln1364_1_fu_1373_p1);

assign zext_ln1364_2_fu_1433_p1 = $unsigned(sext_ln1364_2_fu_1429_p1);

assign zext_ln1364_3_fu_1457_p1 = $unsigned(sext_ln1364_3_fu_1453_p1);

assign zext_ln1364_4_fu_1495_p1 = $unsigned(sext_ln1364_4_fu_1491_p1);

assign zext_ln1364_5_fu_1518_p1 = $unsigned(sext_ln1364_5_fu_1514_p1);

assign zext_ln1364_6_fu_1556_p1 = $unsigned(sext_ln1364_6_fu_1552_p1);

assign zext_ln1364_7_fu_1579_p1 = $unsigned(sext_ln1364_7_fu_1575_p1);

assign zext_ln1364_fu_1353_p1 = $unsigned(sext_ln1364_fu_1349_p1);

assign zext_ln215_1_fu_1255_p1 = DGh_V_fu_1194_p3;

assign zext_ln215_2_fu_1265_p1 = ret_54_fu_1259_p2;

assign zext_ln215_3_fu_1269_p1 = DBh_V_fu_1225_p3;

assign zext_ln215_4_fu_1279_p1 = DRv_V_fu_1181_p3;

assign zext_ln215_5_fu_1283_p1 = DGv_V_fu_1207_p3;

assign zext_ln215_6_fu_1293_p1 = ret_55_fu_1287_p2;

assign zext_ln215_7_fu_1297_p1 = DBv_V_fu_1244_p3;

assign zext_ln215_fu_1251_p1 = DRh_V_fu_1168_p3;

assign zext_ln833_fu_498_p1 = z_fu_487_p2;

assign zext_ln966_fu_536_p1 = xor_ln966_1_fu_530_p2;

always @ (posedge ap_clk) begin
    zext_ln833_reg_1954[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln833_reg_1954_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //design_1_v_demosaic_0_2_DebayerRandBatG
